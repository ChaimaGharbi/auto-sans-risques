name: Build and Push Docker Images

on:
  push:
    branches:
      - microservices

env:
  DOCKER_USERNAME: dhouib
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_REPO: auto-sans-risque

jobs:
  build-and-push-backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: [ _gateway, communication, diagnosis, user_management ]

    steps:
      - name: Login to Docker Hub
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build and Push Image
        run: |
          cd backend/${{ matrix.directory }}
          echo ${{ matrix.directory }}
          docker build -t $DOCKER_USERNAME/$DOCKER_REPO:${{ matrix.directory }} .
          docker push $DOCKER_USERNAME/$DOCKER_REPO:${{ matrix.directory }}

  build-and-push-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory: [ client-side-main , admin-main ]

    steps:
      - name: Login to Docker Hub
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build and Push Image
        run: |
          cd ${{ matrix.directory }}
          echo ${{ matrix.directory }}
          docker build -t $DOCKER_USERNAME/$DOCKER_REPO:${{ matrix.directory }} .
          docker push $DOCKER_USERNAME/$DOCKER_REPO:${{ matrix.directory }}

  deploy-to-vps:
    runs-on: ubuntu-latest
    depends-on: [ build-and-push-backend, build-and-push-frontend ]
    env:
      VPS_IP: 149.202.50.65
      SSH_USER: ubuntu
      SSH_PASSWORD: DfspT4ND42aQ
    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "$VPS_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $VPS_IP >> ~/.ssh/known_hosts

      - name: Connect to VPS and Deploy
        run: |
          ssh -i ~/.ssh/id_rsa user@${VPS_IP} 'cd /home/auto-sans-risque-docker && docker-compose pull && docker-compose up -d'

      - name: Clean up unnecessary images
        run: |
          ssh -i ~/.ssh/id_rsa user@${VPS_IP} 'docker image prune -af'